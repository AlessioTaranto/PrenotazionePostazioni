@{

    ViewData["Title"] = "Pranzo";
    MenuViewModel ViewModel = (MenuViewModel)Model;
    ViewData["DateSelected"] = ViewModel.Date.ToString("dd/MM/yyyy");

}

@using System.Net
@using prenotazione_postazioni_libs.Models;
@using prenotazione_postazioni_libs.Dto;
@using prenotazione_postazioni_mvc.HttpServices;
@using Newtonsoft.Json;
@inject MenuChoicesHttpService _menuChoicesHttpService;
@inject UserHttpService _userHttpService;

@{
    User? LoggedUser = new User(1, "Andrea", "Redegalli", "redegalli03@gmail.com", 1);
    HttpResponseMessage checkExists = await _menuChoicesHttpService.GetByUserAndIdMenu(1, LoggedUser.Id);
    HttpStatusCode code = checkExists.StatusCode;
    if (code == HttpStatusCode.OK)
    {
        MenuChoices menuChoice = await checkExists.Content.ReadFromJsonAsync<MenuChoices>();
        if (menuChoice != null)
        {
            ViewModel.MenuChoices = menuChoice;
            Task<HttpResponseMessage> delete = ViewModel.Delete(1, LoggedUser.Id);
            delete.Wait();
            
        }
        else ViewModel.MenuChoices = null;
    }
}
<link rel="stylesheet" href="css/menu.css">

<script>
    // Calculate the progress in percentage
    function calculateProgress() {
        const now = new Date();
        const hours = now.getHours();
        const minutes = now.getMinutes();
        const totalMinutes = (hours * 60) + minutes;
        const maxMinutes = 17 * 45; // Assuming 11:00 as the end time

        return (totalMinutes / maxMinutes) * 100;
    }

    // Update the width of the progress bar fill
    function updateProgressBar() {
        const progress = calculateProgress();
        $('.progress-bar-fill').css('width', `${progress}%`);
    }

    // Call the update function initially and every minute
    $(document).ready(function () {
        updateProgressBar();
        setInterval(updateProgressBar, 60000); // Update every minute
    });
</script>

<main class="d-flex justify-content-around">
    <div class="container text-center mt-5">
        <div class="progress-bar">
            <div class="progress-bar-fill"></div>
        </div>

        <div class="row">
            <div class="col-sm-4">
                    <div id="cooking">
                    <div class="bubble"></div>
                    <div class="bubble"></div>
                    <div class="bubble"></div>
                    <div class="bubble"></div>
                    <div class="bubble"></div>
                    <div id="area">
                        <div id="sides">
                        <div id="pan"></div>
                        <div id="handle"></div>
                        </div>
                        <div id="pancake">
                        <div id="pastry"></div>
                        </div>
                    </div>
                    </div>
                <div class="user-table-container user-table-scroll">
                    <!-- Codice per la tabella degli utenti -->
                    @{
                        Task<HttpResponseMessage> getAllByMenu = _menuChoicesHttpService.GetByIdMenu(1);
                        getAllByMenu.Wait();

                        List<MenuChoices>? menuChoices = null;
                        User? user = null;

                        if (getAllByMenu.Result != null && getAllByMenu.Result.StatusCode == HttpStatusCode.OK)
                        {
                            menuChoices = await getAllByMenu.Result.Content.ReadFromJsonAsync<List<MenuChoices>?>();
                            foreach (MenuChoices menuChoice in menuChoices)
                            {
                                Task<HttpResponseMessage> getUserById = _userHttpService.GetById(menuChoice.IdUser);
                                getUserById.Wait();

                                user = await getUserById.Result.Content.ReadFromJsonAsync<User?>();

                                <div class="user-table-item">
                                    <img src="img/user_icon.png" alt="@menuChoice.IdUser">
                                    <div class="user-table-col">
                                        <h4>@user.Name @user.Surname</h4>
                                        <p>@menuChoice.Choice</p>
                                    </div>
                                </div>
                            }
                        }
                    }
                </div>
            </div>
            <div class="col-sm-8">
                <div style="display: flex; align-items: center; justify-content: center;">
                    <img class="menu-image" src="@ViewModel.GetImage()" alt="Menu" />
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-8">
                <label for="myTextarea">La tua scelta</label>
                @{
                    if (ViewModel.Menu != null)
                    {
                        <button type="button" class="btn btn-primary d-none" data-bs-toggle="modal" data-bs-target="#exampleModal" id="myButton">
                            Launch demo modal
                        </button>
                        <!-- Modal Bootstrap -->
                        <div class="modal fade" id="exampleModal" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
                            <div class="modal-dialog">
                                <div class="modal-content">
                                    <div class="modal-header">
                                        <h1 class="modal-title fs-5" id="exampleModalLabel">Scelta Menu @ViewData["DateSelected"]</h1>
                                        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                                    </div>
                                    <div class="modal-body">
                                        Scelta inviata con successo
                                    </div>
                                    <div class="modal-footer">
                                        <button type="button" class="btn btn-secondary bg-darkorange bd-darkorange" data-bs-dismiss="modal">Close</button>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <input type="text" class="form-control overflow-hidden bd-darkorange choice-input" placeholder="Cosa vuoi ordinare?" id="myTextarea" maxlength="64">
                        <button class="btn btn-primary bg-darkorange bd-darkorange mt-4" id="invia">
                            Invia
                        </button>
                        <script>
                            $("#invia").on("click", function () {
                                var choice = $("#myTextarea").val().trim();
                                var idMenu = @ViewModel.Menu.Id;
                                var idUser = @LoggedUser.Id;

                                console.log("Choice: " + choice + " idMenu: " + idMenu + " idUser: " + idUser);

                                $.ajax({
                                    type: "POST",
                                    url: "/Menu/addChoice",
                                    data: { "choice": choice, "idUser": idUser, "idMenu": idMenu },
                                    success: function () {
                                        $('#myButton').trigger('click');
                                    }
                                });
                            });

                            $(".choice-input").on("input", function () {
                                if ($(this).val().trim() !== "") {
                                    $(this).addClass("has-value");
                                } else {
                                    $(this).removeClass("has-value");
                                }
                            });
                        </script>
                    }
                    else
                    {
                        <input type="text" class="form-control overflow-hidden bd-darkorange choice-input" placeholder="Cosa vuoi ordinare?" id="myTextarea" maxlength="64">
                        <button class="btn btn-primary bg-darkorange bd-darkorange mt-4" id="invia">
                            Invia
                        </button>
                    }
                }

            </div>

        </div>

    </div>
</main>
