@{

    ViewData["Title"] = "Rumorosità";

}

@using System.Net
@using prenotazione_postazioni_libs.Models;
@using prenotazione_postazioni_libs.Dto;
@using prenotazione_postazioni_mvc.HttpServices;
@using Newtonsoft.Json;
@inject UtenteHttpService _utenteHttpService
@inject VotoHttpService _votoHttpService

    <style>
        .icon-img {
            width: 40%;
        }
    </style>    


@{
    int idUtente = 1; //esempio
    HttpResponseMessage? getAllUtentiResult = await _utenteHttpService.OnGetAllUtenti(); 
    HttpResponseMessage? getAllVotiResult = await _votoHttpService.OnGetVotiFromUtente(idUtente); 
    List<Utente>? utenti = null;
    List<Voto>? voti = null;
    if(getAllUtentiResult != null && getAllUtentiResult.StatusCode == HttpStatusCode.OK && getAllVotiResult.StatusCode == HttpStatusCode.OK)
    {
        utenti = await getAllUtentiResult.Content.ReadFromJsonAsync<List<Utente>?>();
        voti = await getAllVotiResult.Content.ReadFromJsonAsync<List<Voto>?>();

        for(int i = 0; i < utenti.Count; i++)
        {
            if (utenti[i].IdUtente != idUtente)
            {
                string fullName = utenti[i].Nome + " " + utenti[i].Cognome;
                string rumorosita = "rumorosita" + (i + 1);
                string rumoroso = "rumoroso" + (i + 1);
                string non_rumoroso = "non_rumoroso" + (i + 1);
                int voto = 0;

                for (int j = 0; j < voti.Count; j++)
                {
                    if (voti[j].IdUtenteVotato == utenti[i].IdUtente)
                    {
                        voto = voti[j].VotoEffettuato == true ? 1 : -1;
                    }
                }
    <div class="container-fluid mt-4">
                        <div class="p-3 border bg-light"><div class="row">
                        <div class="col-sm-1 ml-3 align-self-center"><img class="item icon-img" src="img/user_icon.png" alt="user_icon"></div>
                        <div class="col-sm-8 align-self-center">@fullName</div>
                        <div class="col-sm-1 align-self-center"><input type="checkbox" name="@rumorosita" id="@rumoroso" alt=@($"{utenti[i].IdUtente}") value="rumoroso" @(
                        voto == 1 ? "checked='checked'" : "")><label for="@rumoroso">Rumoroso</label></div>
                        <div class="col align-self-center"><input type="checkbox" name="@rumorosita" id="@non_rumoroso" alt=@($"{utenti[i].IdUtente}") value="non_rumoroso" @(
                        voto == -1 ? "checked='checked'" : "")><label for="@non_rumoroso">Non rumoroso</label></div>
                    </div></div>
    </div>
            }
            
        }
    }


    



    
}



<script src="js/vote.js"></script>

<script>
     $("input:checkbox").on('click', function() {
          // in the handler, 'this' refers to the box clicked on
          var $box = $(this);
          if ($box.is(":checked")) {
            // the name of the box is retrieved using the .attr() method
            // as it is assumed and expected to be immutable
            var group = "input:checkbox[name='" + $box.attr("name") + "']";
            // the checked state of the group/box on the other hand will change
            // and the current value is retrieved using .prop() method
            $(group).prop("checked", false);
            $box.prop("checked", true);
          } else {
            $box.prop("checked", false);
          }
    });
</script>
    <script>

        ///script che rende una sola checkbox attivabile in un gruppo
        ///+ invio richiesta post
         $("input:checkbox").on('click', function() {
              // in the handler, 'this' refers to the box clicked on
              var $box = $(this);
              var i = parseInt($box.attr("id").charAt($box.attr("id").length - 1)) - 1;
              if ($box.is(":checked")) {
                // the name of the box is retrieved using the .attr() method
                // as it is assumed and expected to be immutable
                var group = "input:checkbox[name='" + $box.attr("name") + "']";
                // the checked state of the group/box on the other hand will change
                // and the current value is retrieved using .prop() method
                $(group).prop("checked", false);
                $box.prop("checked", true);

                ///se l'utente è stato votato come non rumoroso
                  if ($box.attr("id").includes("non_rumoroso")) {
                      $.ajax({
                          type: "POST",
                          url: "Votazioni/VoteUser",
                          data: { "voto": -1, "idUtente" : @idUtente , "idUtenteVotato" : }
                      })
                  ///se l'utente è stato votato come rumoroso
                  } else {
                      $.ajax({
                          type: "POST",
                          url: "Votazioni/VoteUser",
                          data: { "voto": 1, "i": i }
                      })
                  }
                  ///se il voto è stato tolto (è neutro)
              } else {
                  $box.prop("checked", false);
                  $.ajax({
                      type: "POST",
                      url: "Votazioni/VoteUser",
                      data: { "voto": 0, "i": i }
                  }).done(function() {
                      
                  });
              }
        });
        
    </script>