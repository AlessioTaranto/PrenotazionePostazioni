@{
    ViewData["Title"] = "Prenota postazioni";

    BookingViewModel ViewModel = (BookingViewModel)Model;
    ViewData["DateSelected"] = ViewModel.Date.ToString("dd/MM/yyyy");
}

@using System.Net
@using prenotazione_postazioni_libs.Models;
@using prenotazione_postazioni_mvc.HttpServices;

@inject SettingsHttpService _settingsHttpService;
@using Newtonsoft.Json;
@inject UserHttpService _userHttpService;
@inject RoomHttpService _roomHttpService;
@inject BookingHttpSerivice _bookingHttpService;
@inject HolidayHttpService _holidayHttpService;
@inject IHttpContextAccessor HttpContextAccessor

@{

    User? LoggedUser = new User(
                "Andrea",
                "Redegalli",
                "redegalli03@gmail.com",
                1
            );

    HttpResponseMessage? checkExists = await _userHttpService.GetByEmail(LoggedUser.Email);

    HttpStatusCode code = checkExists.StatusCode;
    <body style="background-color:var(--bkg1-color)">
    
    </body>

    if (checkExists.StatusCode == HttpStatusCode.OK)
    {

        LoggedUser = await checkExists.Content.ReadFromJsonAsync<User>();

        HttpContextAccessor.HttpContext.Session.SetString("_User", JsonConvert.SerializeObject(LoggedUser));
    } else {
        //User non assegnato, creazione fixare error 400
        HttpResponseMessage createUser = await _userHttpService.Add(LoggedUser);

        //Assegna anche l'id
        if (createUser.StatusCode == HttpStatusCode.OK)
        {
            checkExists = await _userHttpService.GetByEmail(LoggedUser.Email);
            code = checkExists.StatusCode;

            LoggedUser = await checkExists.Content.ReadFromJsonAsync<User>();

            HttpContextAccessor.HttpContext.Session.SetString("_User", JsonConvert.SerializeObject(LoggedUser));
        }
    }

    Room? Room = null;

    HttpResponseMessage checkRoom = await _roomHttpService.GetByName(ViewModel.Room);

    if (checkRoom.StatusCode == HttpStatusCode.OK)
    {
        Console.WriteLine("Stanza trovata");
        Room = await checkRoom.Content.ReadFromJsonAsync<Room>();
    }

    //Add Guest features

}

<!-- HIDDEN VALUES -->
<p style="display: none" id="_valueUser">@JsonConvert.SerializeObject(LoggedUser)</p>
<p style="display: block" id="_valueRoom">@JsonConvert.SerializeObject(Room)</p>
<p style="display: none" id="_valueDateStart">@JsonConvert.SerializeObject(@ViewModel.StartDate)</p>
<p style="display: none" id="_valueDateEnd">@JsonConvert.SerializeObject(@ViewModel.EndDate)</p>


<!---->
<div class="home_container">

    <!-- Piantina Div -->
    <div class="piantina_container" >
       
   

        <img src=@(ViewModel._ThemeViewModel.GetTheme()) usemap="#image-map">

        <map name="image-map">
            <area alt="Bansky" title="Bansky" href="" coords="3865,1581,3871,936,4701,938,4708,1684" shape="poly">
            <area alt="OpenSpace 1" title="OpenSpace_1" href="" coords="5084,529,5039,821,6336,1003,6381,705" shape="poly">
            <area alt="OpenSpace 2" title="OpenSpace_2" href="" coords="5097,1172,6381,1334,6323,1645,5052,1464" shape="poly">
            <area alt="Sviluppo" title="Sviluppo" href="" coords="4623,2381,4623,2556,4591,2576,4591,4113,5551,4113,5557,2517,5136,2427" shape="poly">
            <area alt="Assistenza" title="Assistenza" href="" coords="3598,2310,3565,2491,3481,2628,3487,4100,4467,4120,4415,2368,3747,2264,3727,2297" shape="poly">
            <area alt="Commerciale" title="Commerciale" href="" coords="2587,3251,2580,4120,3449,4107,3443,3075,3021,3095" shape="poly">
            <area alt="Meeting" title="Meeting" href="" coords="2334,1881,2749,1771,3060,1829,3235,1933,3287,2063,3307,2192,3268,2342,3242,2420,3190,2530,3138,2588,3080,2640,2982,2725,2827,2822,2749,2874,2554,2913,2282,2958,2108,2934,1912,2789,1796,2584,1860,2322,2100,2011" shape="poly">
            <area alt="Contabilità" title="Contabilità" href="" coords="634,1226,1601,1096,1588,344,647,344" shape="poly">
            <area alt="Call Green" title="Call_Green" href="" coords="5168,1797,5713,1869,5674,2193,5136,2109" shape="poly">
            <area alt="Call White" title="Call_White" href="" coords="5733,1874,6297,1965,6232,2263,5700,2185" shape="poly">
        </map>
    </div>

    <!-- Room info Div -->
    <div class="room_info_container">
        <div class="room_info_div">
        <div id="room-info-content">
            <div class="coloreTesto">

            <h2>@ViewModel.GetRoom().Replace('_', ' ')</h2>
             </div>
            <br>
            @{
                if(Room != null){   
                    HttpResponseMessage holiday = await _holidayHttpService.GetAll();
                    List<Holiday>? holidayList = null;
                        if(holiday.StatusCode == HttpStatusCode.OK){
                            holidayList = holiday.Content.ReadFromJsonAsync<List<Holiday>>().Result;
                        }

                        bool isHoliday = false;

                        for(int i = 0; holidayList != null && i < holidayList.Count; i++)
                            if(holidayList[i].Date.ToString("yyyy/MM/dd") == ViewModel.Date.ToString("yyyy/MM/dd")){
                                isHoliday = true;
                                break;
                            }
                        
                        if (isHoliday){
                            <div style="font-size: 1.5vw ;">
                                Chiuso per ferie!
                            </div>
                        }else{
                            <div class="btn-collapse">
                                <a class="fw-bold" data-toggle="collapse" id="orario-btn" href="#orario" role="button" aria-expanded="false" aria-controls="collapseExample">
                                    Seleziona orario
                                </a>
                            </div>
                            <div>
                                <div class="collapse" id="orario">
                                    <div class="p-2 d-flex flex-column align-items-left justify-content-center gap-3">
                                        <div class="d-flex flex-column user-select-none">
                                            <label for="start">Inizio</label>
                                            <input class="form-control" type="time" id="start" name="start" step="3600000" value="@ViewModel.FormatHour(@ViewModel.StartDate.Hour):00"
                                            min="07:00" max="22:00" required>
                                        </div>
                                                    
                                        <div class="d-flex flex-column user-select-none">
                                            <label for="finish">Termine</label>
                                            <input class="form-control" type="time" id="finish" name="finish" step="3600000" value="@ViewModel.FormatHour(@ViewModel.EndDate.Hour):00"
                                            min="07:00" max="22:00" required>
                                        </div>
                                    </div>
                                </div>    
                            </div>
                            <br>
                            <div class="btn-collapse">
                                <a class="fw-bold" data-toggle="collapse" id="prenotazioni-btn" href="#prenotazioni" role="button" aria-expanded="false" aria-controls="collapseExample">
                                    Prenotazioni
                                </a>
                            </div>
                            <div class="collapse" id="prenotazioni">
                                <div class="p-2 h-auto">
                                    <ul id="lista-prenotazioni" class="d-flex flex-column align-items-left gap-2" style="list-style: none; padding: 0; margin: 0;">
                                        @{
                                            HttpResponseMessage? getUtentiPrenotatiByDayResult = await _userHttpService.GetByDate(ViewModel.Date);
                                            List<User>? presenti = null;
                                            if (getUtentiPrenotatiByDayResult.StatusCode == HttpStatusCode.OK){
                                                    presenti = await getUtentiPrenotatiByDayResult.Content.ReadFromJsonAsync<List<User>?>();
                                                        
                                                    if(presenti != null && presenti.Count>0 ){
                                                        for (int j = 0; j < presenti.Count; j++){
                                                            <li class="d-flex flex-row justify-content-left align-items-center">
                                                                <div class="reservation d-flex flex-row justify-content-center align-items-center" style="font-size: 1vw;">
                                                                    <img src="~/img/example/example-1.png">
                                                                        @presenti[@j].Name
                                                                        @presenti[@j].Surname
                                                                </div>
                                                            </li>
                                                        }
                                                    }else{
                                                        <li class="m-0">
                                                            Nessuna prenotazione
                                                        </li>
                                                    }
                                            }
                                        }
                                    </ul>
                                </div>
                            </div>
                            <br>
                            <div>
                                @{
                                    Task<Booking?>? getPrenotazione = ViewModel.GetBooking(JsonConvert.SerializeObject(LoggedUser)
                                    , JsonConvert.SerializeObject(Room), JsonConvert.SerializeObject(ViewModel.StartDate), JsonConvert.SerializeObject(ViewModel.EndDate));
                                    getPrenotazione.Wait();
                                    Booking? prenotazione = getPrenotazione != null ? getPrenotazione.Result : null;

                                    <div class="btn btn-primary bg-darkorange bd-darkorange" style="border: none;" type="button" id="prenota"> Prenota</div>
                                    <div class="btn btn-primary bg-darkorange bd-darkorange" style="border: none;" type="button" id="cancprenota">Annulla prenotazione</div>

                                    if (prenotazione != null)
                                    {
                                        <script>
                                            $('#prenota').css('display', 'none');
                                            $('#cancprenota').css('display', 'block');
                                        </script>
                                    } else
                                    {
                                        <script>
                                            $('#prenota').css('display', 'block');
                                            $('#cancprenota').css('display', 'none');
                                        </script>
                                    }
                                }
                            </div>
                        }
                    }     
            <div class="alert-box">
                <div class="alert-box-view" style="opacity: 0" id="error-box">
                 <!-- Qui dentro viene inserito il codice di errore -->
                </div>
            </div>
            }
        </div>
    </div>


    <button type="button" class="btn btn-primary bg-darkorange bd-darkorange" style="border: none;" data-toggle="modal" data-target="#exampleModalLong">
        Seleziona una data
    </button>

    <!-- Modal -->
    <div class="modal fade" id="exampleModalLong" tabindex="-1" role="dialog" aria-labelledby="exampleModalLongTitle" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLongTitle">Calendario</h5>
                </div>
                <div class="modal-body">
                    <div class="calendar">
                            <div class="head">
                                <ul class="d-flex align-items-center justify-content-center">
                                    <li><img class="item item-img" src="img/left.png" alt="left" onclick="prevMonth()"></li>
                                    <li><a class="item" id="month-year"></a></li>
                                    <li><img class="item item-img" src="img/right.png" alt="right" onclick="nextMonth()"></li>
                                </ul>
                            </div>
                            <div class="body">
                                <table>
                                    <tr>
                                        <th>Lun</th>
                                        <th>Mar</th>
                                        <th>Mer</th>
                                        <th>Gio</th>
                                        <th>Ven</th>
                                        <th>Sab</th>
                                        <th>Dom</th>
                                    </tr>
                                    <tr>
                                        <td id="0-0">1</td>
                                        <td id="1-0">2</td>
                                        <td id="2-0">3</td>
                                        <td id="3-0">4</td>
                                        <td id="4-0">5</td>
                                        <td id="5-0">6</td>
                                        <td id="6-0">7</td>
                                    </tr>
                                    <tr>
                                        <td id="0-1">8</td>
                                        <td id="1-1">9</td>
                                        <td id="2-1">10</td>
                                        <td id="3-1">11</td>
                                        <td id="4-1">12</td>
                                        <td id="5-1">13</td>
                                        <td id="6-1">14</td>
                                    </tr>
                                    <tr>
                                        <td id="0-2">15</td>
                                        <td id="1-2">16</td>
                                        <td id="2-2">17</td>
                                        <td id="3-2">18</td>
                                        <td id="4-2">19</td>
                                        <td id="5-2">20</td>
                                        <td id="6-2">21</td>
                                    </tr>
                                    <tr>
                                        <td id="0-3">22</td>
                                        <td id="1-3">23</td>
                                        <td id="2-3">24</td>
                                        <td id="3-3">25</td>
                                        <td id="4-3">26</td>
                                        <td id="5-3">27</td>
                                        <td id="6-3">28</td>
                                    </tr>
                                    <tr>
                                        <td id="0-4">29</td>
                                        <td id="1-4">30</td>
                                        <td id="2-4">31</td>
                                        <td id="3-4">1</td>
                                        <td id="4-4">2</td>
                                        <td id="5-4">3</td>
                                        <td id="6-4">4</td>
                                    </tr>
                                    <tr>
                                        <td id="0-5">29</td>
                                        <td id="1-5">30</td>
                                        <td id="2-5">31</td>
                                        <td id="3-5">1</td>
                                        <td id="4-5">2</td>
                                        <td id="5-5">3</td>
                                        <td id="6-5">4</td>
                                    </tr>
                                </table>
                            </div>
                        </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary bg-darkorange bd-darkorange" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
    </div>

<script>

    let usingAlertBox = false;

    function alertBox(message, color) {
        let alertBox = $('#error-box');

        alertBox.text(message);
        alertBox.css('background-color', color)

        if (usingAlertBox === false) {
            usingAlertBox = true;
            alertBox.animate({ opacity: 0 }, 0);
            alertBox.animate({ opacity: 1 },
                750,
                "swing",
                function() {
                    setTimeout(function() {
                            alertBox.animate({ opacity: 0 },
                                750,
                                "swing",
                                function() {
                                    usingAlertBox = false;
                                    alertBox.text("");
                                });
                        },
                        3000);
                });
        } 

    }

</script>

<script>

    $(document).ready(function() {

        // Id dei collapse #orario
        let orarioBtn = $('#orario-btn');
        let orarioDiv = $('#orario');

        // Id dei collapse #prenotazioni 
        let prenotazioniBtn = $('#prenotazioni-btn');
        let prenotazioniDiv = $('#prenotazioni');

        // Stato dei collapse
        let stateCollapseHour = @ViewModel.CollapsedHour;
        let stateCollapseList = @ViewModel.CollapsedList;

        // Se lo stato salvato === 1, allora visulaizza il collapse aperto, altrimenti tieni chiuso
        if (stateCollapseHour === 1) {
            orarioBtn.removeClass('collapsed');
            orarioDiv.addClass('show');
        }

        if (stateCollapseList === 1) {
            prenotazioniBtn.removeClass('collapsed');
            prenotazioniDiv.addClass('show');
        }

        // Fix spam click
        let clickedOrarioBtn = false;
        let clickedPrenotazioniBtn = false;

        /*
         * Salva lo stato dei collapse: Ogni volta che viene ricaricata la pagina, quindi
         * ogni volta che viene aggiornato un dato, mantiene attivo lo stato dei collapse senza resettarli.
         *
         * Senza questa funzione i collapse si chiuderanno sempre.
         */

        // Collapse #orario

        orarioBtn.on('click', function(event) {
                if (clickedOrarioBtn === false) {
                    clickedOrarioBtn = true;
                    $.ajax({
                        type: "POST",
                        url: "Home/CollapseHour"
                    }).done(function() {
                        clickedOrarioBtn = false;
                    });
                }
            }
        );

        // Collapse  #prenotazioni

        prenotazioniBtn.on('click', function(event) {
                if (clickedPrenotazioniBtn === false) {
                    clickedPrenotazioniBtn = true;
                    $.ajax({
                        type: "POST",
                        url: "Home/CollapseList"
                    }).done(function() {
                        clickedPrenotazioniBtn = false;
                    });
                }
            }
        );
    });
</script>
<script>

    //Per caricare le feste nel calendario fare una richiesta get al db con ajax, quando risponde carica l'array festivita e tramite esso verra ricaricato il calendar

    $.ajax({
        type: "GET",
        url: "Home/ReloadFeste",
        dataType: 'json',
        error: function (xhr) { }
    });

    let festeJSON = JSON.parse("@ViewModel.HolidayJSON".replaceAll("&quot;", "\""));

    for (var i in festeJSON)
        addFesta(festeJSON[i].idFesta, festeJSON[i].giorno, festeJSON[i].descrizione);
    
    // Giorno selezionato nel calendario
    let daySel = new Date(@ViewModel.Date.Year, (@ViewModel.Date.Month - 1), @ViewModel.Date.Day);

    // Porta il calendario al giorno selezionato
    goDate(daySel);
    
    // Controlla se nel mese corrente è presente un giorno selezionato
    if ((month === 11 ? 0 : (month+1)) === daySel.getMonth())
        clickCalendar(getIdDay(@ViewModel.Date.Day));

    /*
    * ! <area> è utilizzato unicamente nella Map.
    * Raccoglie il click dalla mappa delle stanze, cambia il valore nel ViewModel e ricarica la pagina.
    */


    

    $('area').on('click', function () {
        let nameStanza = event.target.alt;
        console.log(nameStanza)
        $.ajax({
            type: "POST",
            url: "Home/ReloadRoom",
            data: { "room": nameStanza }
        });
        
    });

    /*
     * ! <td> è utilizzato unicamente nei Calendar.
     * Raccoglie il click da un calendar, comprende il tipo di calendar in base alla quantità
     * di caratteri dell'id del <td> sulla quale è stato chiamato l'evento.
     */

    $('td').on('click', function(event) {
        if (isValidDay(event.target.id))
            $.ajax({
                type: "POST",
                url: "Home/ReloadDay",
                data: { "year": date.getFullYear(), "month": date.getMonth(), "day": $('#'.concat(event.target.id)).text() },
                error: function(xhr) {
                    alertBox(xhr.responseText, "#de4802");
                    event.preventDefault();
                }
            }).done(function(data) {
                window.location.reload();
            });
    });

    /**
     * Seleziona un nuovo orario di Inizio, controlla se valido e infine ricarica la pagina con la lista
     * presenze aggiornata.
     */

    $('#start').on('change', function(event) {
        $.ajax({
            type: "POST",
            url: "Home/ReloadStart",
            data: { "hour": (event.target.value).split(":")[0] },
            error: function(xhr) {
                alertBox(xhr.responseText, "#de4802");
                event.preventDefault();
                event.target.value = "@ViewModel.FormatHour(@ViewModel.StartDate.Hour):00";
            }
        }).done(function() {
            window.location.reload();
        });
    });

    /**
     * Seleziona un nuovo orario di Termine, controlla se valido e infine ricarica la pagina con la lista
     * presenze aggiornata.
     */

    $('#finish').on('change', function(event) {

        $.ajax({
            type: "POST",
            url: "Home/ReloadFinish",
            data: { "hour": (event.target.value).split(":")[0] },
            error: function(xhr) {
                alertBox(xhr.responseText, "#de4802");
                event.preventDefault();
                event.target.value = "@ViewModel.FormatHour(@ViewModel.EndDate.Hour):00";
            }
        }).done(function() {
            window.location.reload();
        });
    });

</script>

<!-- Qui viene gestito lato Javascript il processo di prenotazione. (Btn, cancellazione e errori) -->
<script>

    $('#prenota').on('click', function(event) {

        if ($('#_valueRoom').text() === "null") {
            alertBox("Seleziona una stanza ", "#de4802");
            return;
        } else if ($('#_valueUtente').text() === "null") {
            alertBox("Non puoi effettuare prenotazioni come Guest", "#de4802");
            return;
        }

        $.ajax({
            type: "POST",
            url: "Home/Prenota",
            data: { "user": $('#_valueUser').text(), "room": $('#_valueRoom').text(), "start": $('#_valueDateStart').text(), "end": $('#_valueDateEnd').text() },
            error: function (xhr) {
            }
        }).done(function (data, statusText, xhr) {
            var status = xhr.status;
            if (status === 200) {
                $('#prenota').css('display', 'none');
                $('#cancprenota').css('display', 'block');
                location.reload();

                alertBox("Prenotazione effettuata", "#08a100");
            } else if (status === 404) 
                alertBox("Non puoi prenotarti nuovamente", "#de4802");
            else
                alertBox("Errore", "#de4802");
        });

    });

    $('#cancprenota').on('click', function(event) {

        if ($('#_valueRoom').text() === "null") {
            alertBox("Seleziona una stanza", "#de4802");
            return;
        } else if ($('#_valueUtente').text() === "null") {
            alertBox("Non puoi cancellare prenotazioni come Guest", "#de4802");
            return;
        }

        $.ajax({
            type: "GET",
            url: "Home/DeletePrenotazione",
            data: { "user": $('#_valueUser').text(), "room": $('#_valueRoom').text(), "start": $('#_valueDateStart').text(), "end": $('#_valueDateEnd').text() },
            error: function (xhr) {
            }
        }).done(function (data, statusText, xhr) {
            var status = xhr.status;
            if (status === 200) {
                $('#prenota').css('display', 'block');
                $('#cancprenota').css('display', 'none');
                location.reload();

                alertBox("Prenotazione cancellata", "#08a100");
            } else if (status === 404) 
                alertBox("Prenotazione non trovata", "#de4802");
            else
                alertBox("Errore", "#de4802");
        });

    });

</script>